.IFNDEF _NES_SYMBOLS_
.DEFINE _NES_SYMBOLS_

.SEGMENT "CODE"

;
;  PPU MEMORY MAP
;  $0000-$0FFF	$1000	PATTERN TABLE 0
;  $1000-$1FFF	$1000	PATTERN TABLE 1
;  $2000-$23FF	$0400	NAMETABLE 0
;  $2400-$27FF	$0400	NAMETABLE 1
;  $2800-$2BFF	$0400	NAMETABLE 2
;  $2C00-$2FFF	$0400	NAMETABLE 3
;  $3000-$3EFF	$0F00	MIRRORS OF $2000-$2EFF
;  $3F00-$3F1F	$0020	PALETTE RAM INDEXES
;  $3F20-$3FFF	$00E0	MIRRORS OF $3F00-$3F1F
;

;
; PPU REGISTERS
;
PPUCTRL   = $2000
PPUMASK   = $2001
PPUSTATUS = $2002
OAMADDR   = $2003       ; WRITE THE ADDRESS OF OAM YOU WANT TO ACCESS HERE. 
                        ; MOST GAMES JUST WRITE $00 HERE AND THEN USE OAMDMA. 
                        ; (DMA IS IMPLEMENTED IN THE 2A03/7 CHIP AND WORKS BY REPEATEDLY WRITING TO OAMDATA)
OAMDATA   = $2004       ; WRITE OAM DATA HERE. WRITES WILL INCREMENT OAMADDR AFTER THE WRITE; 
                        ; READS DURING VERTICAL OR FORCED BLANKING RETURN THE VALUE FROM OAM AT THAT ADDRESS BUT DO NOT INCREMENT.
                        ; DO NOT WRITE DIRECTLY TO THIS REGISTER IN MOST CASES. 
PPUSCROLL = $2005       ; THIS REGISTER IS USED TO CHANGE THE SCROLL POSITION, 
                        ; THAT IS, TO TELL THE PPU WHICH PIXEL OF THE NAMETABLE SELECTED THROUGH PPUCTRL 
                        ; SHOULD BE AT THE TOP LEFT CORNER OF THE RENDERED SCREEN. 
                        ; TYPICALLY, THIS REGISTER IS WRITTEN TO DURING VERTICAL BLANKING, SO THAT THE NEXT FRAME 
                        ; STARTS RENDERING FROM THE DESIRED LOCATION, BUT IT CAN ALSO BE MODIFIED DURING RENDERING 
                        ; IN ORDER TO SPLIT THE SCREEN. CHANGES MADE TO THE VERTICAL SCROLL DURING RENDERING 
                        ; WILL ONLY TAKE EFFECT ON THE NEXT FRAME. (WRITE X, WRITE Y)
PPUADDR   = $2006       ; BECAUSE THE CPU AND THE PPU ARE ON SEPARATE BUSES, NEITHER HAS DIRECT ACCESS TO THE OTHER'S MEMORY. 
                        ; THE CPU WRITES TO VRAM THROUGH A PAIR OF REGISTERS ON THE PPU. 
                        ; FIRST IT LOADS AN ADDRESS INTO PPUADDR, AND THEN IT WRITES REPEATEDLY TO PPUDATA TO FILL VRAM.
                        ; AFTER READING PPUSTATUS TO RESET THE ADDRESS LATCH, WRITE THE 16-BIT ADDRESS OF VRAM YOU WANT TO ACCESS HERE,
                        ; UPPER BYTE FIRST.
PPUDATA   = $2007       ; VRAM READ/WRITE DATA REGISTER. AFTER ACCESS, THE VIDEO MEMORY ADDRESS WILL INCREMENT BY AN AMOUNT DETERMINED BY BIT 2 PPUCTRL::VRAM_INC OF PPUCTRL.
OAMDMA    = $4014       ; THIS PORT IS LOCATED ON THE CPU. WRITING $XX WILL UPLOAD 256 BYTES OF DATA FROM CPU PAGE $XX00-$XXFF TO THE INTERNAL PPU OAM. 
                        ; THIS PAGE IS TYPICALLY LOCATED IN INTERNAL RAM, COMMONLY $0200-$02FF, BUT CARTRIDGE RAM OR ROM CAN BE USED AS WELL.

;
; IO REGISTERS
;
NESIOREG1 = $4016         ; CONTROLLER INPUT IS INITIATED 
                        ; BY WRITING A 1 FOLLOWED BY A 0 TO THIS ADDRESS. 
NESIOREG2 = $4017

.ENDIF